---
# Source: stadium-chart/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dev-secrets
  namespace: stadiumapp
type: Opaque
stringData:
  JWT_KEY: LKGJBEBRJOGJTRGVORIJGEROGFJREOIGFR
  SESSION_SECRET: LKGJBEBRJOGJTRGVORIJGEROGFJREOIGFR
  SQL_NODEJS_PW: r11944078
  SQL_NODEJS_USER: admin
---
# Source: stadium-chart/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-configmap
  namespace: stadiumapp
data:
  # Add your key-value pairs here
  DB: stadium
  DEFAULT_PROFILE_PATH: /app/default_images/
  PUBLIC_IP: 52.8.178.204
  SQL_HOST: database-1.cf4mjuxc3ciy.ap-northeast-1.rds.amazonaws.com
  UPLOAD_PATH: /app/static/
---
# Source: stadium-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-stadium-chart
  namespace: stadiumapp
spec:
  type: ClusterIP
  selector:
    app: dev-stadium-chart
  ports:
    - port: 80 # SERVICE exposed port
      targetPort: http # Port to forward to in the POD
      protocol: TCP # The protocol the SERVICE will listen to
      name: http # SERVICE port name
---
# Source: stadium-chart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-stadium-chart # This will be the name of the deployment
  namespace: stadiumapp
  labels:
    app: dev-stadium-chart
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dev-stadium-chart
  template: # This is the template of the pod inside the deployment
    metadata:
      labels:
        app: dev-stadium-chart
    spec:
      containers:
        - name: stadium-chart
          # image: "stadiumacr.azurecr.io/backend:1.16.0"
          #TODO: Change this to the correct image
          image: "stadiumacr.azurecr.io/backend:latest"
          envFrom:
            - configMapRef:
                name: dev-configmap
            - secretRef:
                name: dev-secrets
          ports:
            - name: http # We named that port "http" so we can refer to it later
              containerPort: 3000
              protocol: TCP
---
# Source: stadium-chart/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-ingress
  namespace: stadiumapp
  annotations:
    kubernetes.io/ingress.class: nginx
    # appgw.ingress.kubernetes.io/backend-path-prefix: "/"
    cert-manager.io/cluster-issuer: letsencrypt
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/acme-challenge-type: http01
    appgw.ingress.kubernetes.io/health-probe-status-codes: "200-499"

spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - api.stadium.rdto.io
    secretName: tls-secret
  rules:
  - host: api.stadium.rdto.io
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: dev-stadium-chart
              port:
                number: 80
